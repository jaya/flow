<h1 class="subtitle">Show Candidate</h1>
<div class="tile is-ancestor">
  <div class="tile is-vertical is-7">
    <div class="tile">
      <div class="tile is-parent is-vertical">
        <article class="tile is-child notification is-link">
          <p class="title"><%= @candidate.name %></p>
          <p class="subtitle"><%= @candidate.email %></p>
          <%= if @candidate.phone do %>
            <p><i class="fas fa-phone"></i> : <%= @candidate.phone %></p>
          <% end %>
          <%= if @candidate.linkedin do %>
            <p><i class="fab fa-linkedin"></i> : <%= @candidate.linkedin %></p>
          <% end %>
          <%= if @candidate.github do %>
            <p><i class="fab fa-github-square"></i> : <%= @candidate.github %></p>
          <% end %>
            <span class="tag is-primary"><strong>Status : <%= @candidate.status.name %></strong></span>
          <hr>
          <p class="is-small">
            <strong>Indicate by:</strong>  <%= @candidate.user.name %><br>
            <strong>Create:</strong> <%= @candidate.inserted_at %><br>
            <strong>Modify:</strong> <%= @candidate.updated_at %><br><br>
            <span class="tag is-warning">
              <i class="fas fa-calendar-day"></i>&nbsp;
              waiting per days &nbsp;
              <%= Date.diff(Date.utc_today, @candidate.inserted_at) %>
            </span>
          </p>
        </article>
      </div>
    </div>
  </div>
  <div class="tile is-parent is-vertical is-5">
    <article class="tile is-child notification is-link">
      <div class="content">
        <img class="image is-circle is-128x128 client-logo" src="<%= @candidate.job.client.logo %>">
        <p class="title"><%= @candidate.job.client.name %></p>
        <p class="subtitle"><%= @candidate.job.client.description %></p>
      </div>
    </article>
    <article class="tile is-child notification is-link">
      <p class="title"><%= @candidate.job.name %></p>
      <p class="subtitle"><%= @candidate.job.description %></p>
      <p>
        <span class="tag is-info"><strong>Postions : <%= @candidate.job.positions %></strong></span>
      </p>
    </article>
  </div>
</div>

<a class="button is-link" href="<%= Routes.candidate_path(@conn, :index) %>">
  <span class="icon">
    <i class="fas fa-undo-alt"></i>
  </span>
  <span>Back</span>
</a>

<a class="button is-link" href="<%= Routes.candidate_path(@conn, :edit, @candidate) %>">
  <span class="icon">
    <i class="far fa-edit"></i>
  </span>
  <span>Edit</span>
</a>

<hr>

<div class="box">
  <h1>
    What do you think about this candidate
  </h2>
  <hr>
  <div class="container" id="comments"></div>
  <div class="container">
    <div class="field">
      <div class="control">
        <textarea id="candidate-comment" class="textarea" placeholder="Textarea"></textarea>
      </div>
    </div>
    <button id="btn-save-comment" class="button is-primary is-fullwidth">
      Save
    </button>
  </div>
</div>

<script>
  window.csrfToken = "<%= @token %>"
  document.addEventListener("DOMContentLoaded", function() {

    window.candidateID = "<%= @candidate.id %>"
    var channel = window.socket.channel(`comments:${window.candidateID}`, {});

    channel
      .join()
      .receive('ok', resp => {
        console.log(resp);
        renderComments(resp.comments);
      })
      .receive('error', resp => {
        console.log('Unable to join', resp);
      });

    channel.on(`comments:${window.candidateID}:new`, renderComment);
    channel.on(`comments:remove`, removeComment);

    document.querySelector('#btn-save-comment').addEventListener('click', () => {
      const text = document.querySelector('#candidate-comment').value;
      channel.push('comment:add', { text: text });
    });

    function renderComments(comments) {
      const renderedComments = comments.map(comment => {
        return commentTemplate(comment);
      });

      document.getElementById('comments').innerHTML = renderedComments.join('');
    }

    var stringToHTML = function (str) {
      var parser = new DOMParser();
      var doc = parser.parseFromString(str, 'text/html');
      return doc.body;
    };

    function renderComment(event) {
      const renderedComment = commentTemplate(event.comment);

      const comments = document.getElementById("comments");
      comments.prepend(stringToHTML(renderedComment));
    }

    function deleteComment(commentID) {
      channel.push('comment:delete', { id: commentID });
    }

    function removeComment(event) {
      let comment = document.getElementById(event.id)
      console.log(`comment id ===============> ${event.id}`)
      comment.remove()
    }

    function commentTemplate(comment) {
      let email = 'Anonymous';
      if (comment.user) {
        email = comment.user.email;
      }

      return `
        <div class="notification is-link" id="${comment.id}" style="margin: 10px 0">
          <button class="delete delete-comment" onclick="window.deleteComment('${comment.id}')"></button>
          <div class="comment">
            <div class="message-avatar">
              <img class="image is-circle is-32x32" src="${comment.user.avatar}">
            </div>
            <div class="message-content">
              <i class="fas fa-comments"></i> ${comment.text}<br>
              <i class="fas fa-calendar-day"></i> ${comment.inserted_at}<br>
            </div>
          </div>
        </div>
      `;
    }

    window.deleteComment = deleteComment;
  });
</script>
